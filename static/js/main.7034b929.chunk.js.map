{"version":3,"sources":["redux/phoneBook/phonebook-actions.js","redux/phoneBook/phonebook-reducer.js","redux/store.js","components/Section/Section.styled.jsx","components/Section/Section.js","components/Phonebook/PhoneBook.styled.jsx","components/Phonebook/Phonebook.js","redux/phoneBook/phonebook-selectors.js","redux/phoneBook/phonebook-operations.js","components/Phonebook/PhoneBook.container.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","components/Filter/Filter.container.js","components/Container/Container.styled.jsx","components/Container/Container.js","components/App/App.js","index.js"],"names":["fetchPhonebookRequest","createAction","fetchPhonebookSuccess","fetchPhonebookError","addPhonebookRequest","addPhonebookSuccess","addPhonebookError","deletePhonebookRequest","deletePhonebookSuccess","deletePhonebookError","filterContacts","loading","createReducer","filterReducer","_","action","payload","contacts","state","filter","id","combineReducers","myMiddleware","store","next","rootReducer","phoneBook","phoneReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","feedbackStore","persistor","persistStore","Name","styled","h2","Section","title","children","Form","form","Label","label","Input","input","Button","button","Phonebook","name","number","handleSubmitForm","evt","preventDefault","newContactName","props","find","toLowerCase","alert","reset","onSubmit","handleInputChange","setState","currentTarget","value","this","formNameId","uuidv4","formNumberId","htmlFor","type","pattern","required","onChange","trim","onClick","addNameFhoneBook","React","Component","getContacts","getFilter","getVisibleFilter","createSelector","contact","toLocaleLowerCase","includes","getLoading","axios","defaults","baseURL","connect","dispatch","data","contactNew","post","then","catch","error","addContact","List","ul","Item","li","onDelete","delete","deleteContact","map","Filter","Wrapper","div","Container","App","fetchContact","isLoadingContacts","className","a","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7034b929.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n\nexport const fetchPhonebookRequest = createAction('phonebook/fetchContact');\nexport const fetchPhonebookSuccess = createAction('phonebook/fetchContactSuccess');\nexport const fetchPhonebookError = createAction('phonebook/fetchContactError')\n\nexport const addPhonebookRequest = createAction('phonebook/addContact');\nexport const addPhonebookSuccess = createAction('phonebook/addContactSuccess');\nexport const addPhonebookError = createAction('phonebook/addContactError')\n\nexport const deletePhonebookRequest = createAction('phonebook/deleteContact');\nexport const deletePhonebookSuccess = createAction('phonebook/deleteContactSuccess');\nexport const deletePhonebookError = createAction('phonebook/deleteContactError');\n\nexport const filterContacts = createAction('phonebook/cgangeFilter');\n\n\n\n// import phoneBookTypes from './phonebook-types';\n// import { v4 as uuidv4 } from 'uuid';\n// import store from '../store';\n\n// export const addContact = data => ({\n//   type: phoneBookTypes.ADD_CONTACT,\n//   payload: {\n//     id: uuidv4(),\n//     name: data.name,\n//     number: data.number,\n//   },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: phoneBookTypes.DELETE,\n//   payload: contactId,\n// });\n\n// export const filterContacts = value => ({\n//   type: phoneBookTypes.FILTER,\n//   payload: value,\n// });\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { addPhonebookError, addPhonebookRequest, addPhonebookSuccess,  deletePhonebookError, deletePhonebookRequest, deletePhonebookSuccess, fetchPhonebookError, fetchPhonebookRequest, fetchPhonebookSuccess } from './phonebook-actions';\n\nconst initialStateFilter = '';\nconst initialStateContacts = [];\n\nconst loading = createReducer(false, {\n  [addPhonebookRequest]: () => true,\n  [addPhonebookSuccess]: () => false,\n  [addPhonebookError]: () => false,\n    [deletePhonebookRequest]: () => true,\n  [deletePhonebookSuccess]: () => false,\n  [deletePhonebookError]: () => false,\n  [fetchPhonebookRequest]: () => true,\n  [fetchPhonebookSuccess]: () => false,\n  [fetchPhonebookError]: () => false,\n})\nconst filterReducer = createReducer(initialStateFilter, {\n  'phonebook/cgangeFilter': (_, action) => action.payload,\n});\n\nconst contacts = createReducer(initialStateContacts, {\n    [fetchPhonebookSuccess]: (_, { payload }) => payload,\n  \n  [addPhonebookSuccess]: (state, { payload }) => {\n\n    return [...state, payload];\n  },\n  [deletePhonebookSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default combineReducers({\n  contacts,\n  filter: filterReducer,\n  loading\n});\n\n// import { combineReducers } from 'redux';\n// import phoneBookTypes from './phonebook-types';\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case phoneBookTypes.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const contacts = (\n//   state = [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ],\n//   { type, payload },\n// ) => {\n//   switch (type) {\n//     case phoneBookTypes.ADD_CONTACT:\n//       const normalizedName = state.find(\n//         contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n//       );\n\n//       if (normalizedName) {\n//         alert(`${payload.name} is alredy in contacts.`);\n//         return state;\n//       }\n//       return [...state, payload];\n\n//     case phoneBookTypes.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   contacts,\n//   filter: filterReducer,\n// });\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\n\nimport phoneReducer from './phoneBook/phonebook-reducer';\n\n\nconst myMiddleware = store => next => action => {\n\n  next(action)\n}\n\nconst rootReducer = combineReducers({\n  phoneBook:  phoneReducer,\n});\n\n\nconst store = configureStore({\n  reducer: rootReducer,\n\n  middleware: (getDefaultMiddleware) => [\n      ...getDefaultMiddleware({\n       serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER], \n    },\n      }),\n    myMiddleware,\n    logger,\n  ],\n\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nlet persistor = persistStore(store);\n\nconst feedbackStore = {\n  store,\n  persistor,\n};\n\nexport default feedbackStore;\n\n\n// const store = configureStore({\n//   reducer: rootReducer,\n\n//   middleware: getDefaultMiddleware =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        \n//       },\n//       myMiddleware,\n//     }).concat(logger),\n//   myMiddleware,\n//   devTools: process.env.NODE_ENV === 'development',\n// });\n// const middleware = [\n//   ...getDefaultMiddleware({\n//        serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER], \n//     },\n//   }),\n//   myMiddleware,\n//     logger,\n// ]\n// const store = configureStore({\n//   reducer: rootReducer,\n\n//   middleware,\n//    logger,\n//   devTools: process.env.NODE_ENV === 'development',\n// });","import styled from '@emotion/styled';\n\nexport const Name = styled.h2`\n  color: rgb(61, 57, 57);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Name } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <section>\n    {title && <Name>{title}</Name>}\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 1px solid rgb(61, 57, 57);\n  width: 300px;\n  padding: 10px;\n  background-color: rgba(84, 81, 81, 0.353);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n  color: rgb(241, 239, 235);\n`;\n\nexport const Input = styled.input`\n  border: 1px solid rgb(241, 239, 235);\n  border-radius: 2px;\n  &[type='text'],\n  &[type='tel'] {\n    background-color: inherit;\n    border: 1px solid rgb(76, 74, 74);\n    color: aliceblue;\n  }\n  &[type='text']:focus {\n    background-color: rgb(61, 57, 57);\n  }\n`;\n\nexport const Button = styled.button`\n  width: fit-content;\n  padding: 3px 5px;\n  background-color: rgb(68, 68, 154);\n  border-radius: 2px;\n  color: rgb(241, 239, 235);\n`;\n","import { v4 as uuidv4 } from 'uuid';\nimport React from 'react';\nimport { Form, Label, Input, Button } from './PhoneBook.styled';\n\nclass Phonebook extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmitForm = evt => {\n    evt.preventDefault();\n    const newContactName = this.state.name;\n    const currentContacts = this.props.contacts;\n   \n       const normalizedName = currentContacts.find(\n      ({name}) => name.toLowerCase() === newContactName.toLowerCase(),\n    );\n\n    if (normalizedName) {\n      alert(`${newContactName} is alredy in contacts.`);\n      this.reset();\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  handleInputChange = evt => {\n    this.setState({\n      [evt.currentTarget.name]: evt.currentTarget.value,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const formNameId = uuidv4();\n    const formNumberId = uuidv4();\n\n    return (\n      <Form onSubmit={this.handleSubmitForm}>\n        <Label htmlFor={formNameId}>\n          Name\n          <Input\n            id={formNameId}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </Label>\n\n        <Label htmlFor={formNumberId}>\n          Number\n          <Input\n            id={formNumberId}\n            type=\"tel\"\n            name=\"number\"\n            value={number.trim()}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </Label>\n        <Button type=\"submit\" onClick={this.addNameFhoneBook}>\n          Add contact\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default Phonebook;\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => {\r\n \r\n   return state.phoneBook.contacts\r\n};\r\n\r\nexport const getFilter = state => state.phoneBook.filter;\r\n\r\nexport const getVisibleFilter = createSelector([getFilter, getContacts], (filter, contacts) => {\r\n    return  contacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n})\r\n\r\nexport const getLoading = state => state.phoneBook.loading;\r\n\r\n// previous version\r\n\r\n// export const getVisibleFilter = state => {\r\n//     const filter = getFilter(state);\r\n//     const contacts = getContacts(state)\r\n//   return  contacts.filter(contact =>\r\n//     contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\r\n//     );\r\n    \r\n// }","import axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addPhonebookError, addPhonebookRequest, addPhonebookSuccess, deletePhonebookError, deletePhonebookRequest, deletePhonebookSuccess, fetchPhonebookError, fetchPhonebookRequest, fetchPhonebookSuccess } from './phonebook-actions';\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040'\r\n\r\nexport const fetchContact = () => async dispatch => {\r\n  dispatch(fetchPhonebookRequest())\r\n\r\n  try {\r\n    const { data } = await axios.get(`/contacts`);\r\n    dispatch(fetchPhonebookSuccess(data))\r\n  } catch (error) {\r\n    dispatch(fetchPhonebookError(error))\r\n  }\r\n  // axios\r\n  //   .get(`/contacts`)\r\n  //   .then(({ data }) => dispatch(fetchPhonebookSuccess(data)))\r\n  //   .catch(error => dispatch(fetchPhonebookError(error)))\r\n}\r\nexport const addContact = data => dispatch => {\r\n const { name, number } = data;\r\n  const contactNew = {\r\n   \r\n     id: uuidv4(),\r\n      name: name,\r\n     number: number\r\n  };\r\n\r\n  dispatch(addPhonebookRequest());\r\n\r\n  axios.post(\r\n    `/contacts`, contactNew\r\n  ).then(({ data }) => dispatch(addPhonebookSuccess(data)))\r\n    .catch(error => dispatch(addPhonebookError(error)))\r\n}\r\n \r\nexport const deleteContact = id => dispatch => {\r\n    dispatch(deletePhonebookRequest());\r\n\r\n  axios.delete(`contacts/${id}`)\r\n    .then(() => dispatch(deletePhonebookSuccess(id)))\r\n    .catch(error => dispatch(deletePhonebookError(error)))\r\n\r\n}\r\n","import { connect } from 'react-redux';\nimport Phonebook from './Phonebook';\nimport { getContacts } from '../../redux/phoneBook/phonebook-selectors'\nimport { addContact } from '../../redux/phoneBook/phonebook-operations';\n\n\n\nconst mapStateToProps = state => ({\n \n  contacts: getContacts(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 300px;\n  padding: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n  border: 1px solid rgb(61, 57, 57);\n  border-radius: 2px;\n  color: rgb(241, 239, 235);\n  background-color: rgba(84, 81, 81, 0.353);\n`;\n\nexport const Button = styled.button`\n  width: 50px;\n  background-color: rgb(68, 68, 154);\n  border-radius: 2px;\n  color: rgb(241, 239, 235);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Item, List } from './ContactList.styled';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/phoneBook/phonebook-operations';\nimport { getVisibleFilter } from '../../redux/phoneBook/phonebook-selectors';\n\n\n\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <List>\n\n    {contacts.map(({ name, number, id }) => (\n      <Item key={id}>\n        <span>{name} : </span>\n        <span>{number}</span>\n        <Button onClick={() => onDelete(id)}>Delete</Button>\n      </Item>\n    ))}\n  </List>\n);\n\nconst mapStateToProps = state => ({\n\n    contacts: getVisibleFilter(state),\n  });\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(deleteContact(id)),\n});\n\nContactList.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\n\n// export default ContactList;\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  width: 300px;\n  display: flex;\n  justify-content: flex-end;\n  border: 1px solid rgb(61, 57, 57);\n  padding: 10px;\n  color: rgb(241, 239, 235);\n  background-color: rgba(84, 81, 81, 0.353);\n`;\n\nexport const Input = styled.input`\n  border: 1px solid rgb(241, 239, 235);\n  border-radius: 2px;\n  &[type='text'],\n  &[type='tel'] {\n    background-color: inherit;\n    border: 1px solid rgb(76, 74, 74);\n    color: aliceblue;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = ({ filter, onChange }) => (\n  <Label>\n    Find contacts by name\n    <Input\n      type=\"text\"\n      value={filter}\n      name=\"filter\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      onChange={onChange}\n    />\n  </Label>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport { filterContacts } from '../../redux/phoneBook/phonebook-actions';\nimport { getFilter } from '../../redux/phoneBook/phonebook-selectors';\n\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: evt => dispatch(filterContacts(evt.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  background-color: rgba(39, 36, 36, 0.394);\n  padding: 15px;\n  width: fit-content;\n  border-radius: 6px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Wrapper } from './Container.styled';\n\nconst Container = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import {Component} from 'react';\nimport Section from '../Section';\nimport Phonebook from '../Phonebook';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport Container from '../Container';\nimport { connect } from 'react-redux';\nimport { fetchContact } from '../../redux/phoneBook/phonebook-operations';\nimport { getLoading } from '../../redux/phoneBook/phonebook-selectors';\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n  this.props.fetchContact()\n  }\n   \n\n  render() {\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <Phonebook />\n        </Section>\n\n        <Section title=\"Contacts\">\n           \n          <Filter />\n           {this.props.isLoadingContacts && <h3 className='loading'>Loading...</h3>}\n          <ContactList />\n        \n        </Section>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n\n    isLoadingContacts: getLoading(state),\n  });\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContact: () => dispatch(fetchContact()),\n \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading=\"Loading...\" persistor={store.persistor}> */}\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}